Index: src/com/aionemu/gameserver/network/aion/serverpackets/SM_SKILL_LIST.java
===================================================================
--- src/com/aionemu/gameserver/network/aion/serverpackets/SM_SKILL_LIST.java	(Revision 305)
+++ src/com/aionemu/gameserver/network/aion/serverpackets/SM_SKILL_LIST.java	(Arbeitskopie)
@@ -1,10 +1,13 @@
 package com.aionemu.gameserver.network.aion.serverpackets;
 
 import com.aionemu.gameserver.dataholders.DataManager;
+import com.aionemu.gameserver.dataholders.SkillData;
 import com.aionemu.gameserver.model.gameobjects.player.Player;
 import com.aionemu.gameserver.model.skill.PlayerSkillEntry;
+import com.aionemu.gameserver.model.skill.PlayerSkillList;
 import com.aionemu.gameserver.network.aion.AionConnection;
 import com.aionemu.gameserver.network.aion.AionServerPacket;
+import com.aionemu.gameserver.skillengine.model.SkillTemplate;
 
 /**
  * In this packet Server is sending Skill Info?
@@ -18,7 +21,7 @@
     private int skillNameId;
     private String skillLvl;
     public static final int YOU_LEARNED_SKILL = 1300050;
-    boolean isNew = false;
+    boolean isNew;
 
     /**
      * This constructor is used on player entering the world Constructs new
@@ -25,49 +28,48 @@
      * <tt>SM_SKILL_LIST </tt> packet
      */
     public SM_SKILL_LIST(Player player, PlayerSkillEntry[] basicSkills) {
-        this.skillList = player.getSkillList().getBasicSkills();
-        this.messageId = 0;
+        isNew = false;
+        skillList = player.getSkillList().getBasicSkills();
+        messageId = 0;
+        isNew = true;
     }
 
     public SM_SKILL_LIST(Player player, PlayerSkillEntry stigmaSkill) {
-        this.skillList = new PlayerSkillEntry[]{stigmaSkill};
-        this.messageId = 0;
+		isNew = false;
+        skillList = (new PlayerSkillEntry[] { stigmaSkill });
+        messageId = 0;
     }
 
     public SM_SKILL_LIST(PlayerSkillEntry skillListEntry, int messageId, boolean isNew) {
-        this.skillList = new PlayerSkillEntry[]{skillListEntry};
+		this.isNew = false;
+        skillList = (new PlayerSkillEntry[] { skillListEntry });
         this.messageId = messageId;
-        this.skillNameId = DataManager.SKILL_DATA.getSkillTemplate(skillListEntry.getSkillId()).getNameId();
-        this.skillLvl = String.valueOf(skillListEntry.getSkillLevel());
+        skillNameId = DataManager.SKILL_DATA.getSkillTemplate(skillListEntry.getSkillId()).getNameId();
+        skillLvl = String.valueOf(skillListEntry.getSkillLevel());
         this.isNew = isNew;
     }
 
     @Override
     protected void writeImpl(AionConnection con) {
-
-        final int size = skillList.length;
+        int size = skillList.length;
         writeH(size); // skills list size
-
+		writeC(isNew ? 1 : 0);
         if (size > 0) {
             for (PlayerSkillEntry entry : skillList) {
-				writeC(0x00); //unk 47
-                writeH(entry.getSkillId());// id
-                writeC(entry.getSkillLevel());// lvl
-                writeC(0x00);
-                int extraLevel = entry.getExtraLvl();
-                writeC(extraLevel);
-                if (isNew && extraLevel == 0 && !entry.isStigma()) {
-                    writeD((int) (System.currentTimeMillis() / 1000)); // Learned date NCSoft......
-                } else {
-                    writeD(0);
-                }
-                writeC(entry.isStigma() ? 1 : 0); // stigma
+				writeH(entry.getSkillId());
+                writeH(entry.getSkillLevel());
+                writeC(0);
+                writeC(entry.getExtraLvl());
+                if(isNew)
+                    writeD((int)(System.currentTimeMillis() / 1000L)); // Learned date NCSoft......
+                else
+                   writeD(0);
+               writeC(entry.isStigma() ? 1 : 0);
             }
         }
-        writeC(0x00); // unk 47
         writeD(messageId);
         if (messageId != 0) {
-            writeH(0x24); // unk
+            writeH(0x36); // unk
             writeD(skillNameId);
             writeH(0x00);
             writeS(skillLvl);
